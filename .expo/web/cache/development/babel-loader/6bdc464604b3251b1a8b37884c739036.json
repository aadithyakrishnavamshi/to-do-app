{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NOT_INITIALIZED_ERROR = void 0;\nexports.default = createNavigationContainerRef;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _routers = require(\"@react-navigation/routers\");\n\nvar NOT_INITIALIZED_ERROR = \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\nexports.NOT_INITIALIZED_ERROR = NOT_INITIALIZED_ERROR;\n\nfunction createNavigationContainerRef() {\n  var methods = [].concat((0, _toConsumableArray2.default)(Object.keys(_routers.CommonActions)), ['addListener', 'removeListener', 'resetRoot', 'dispatch', 'isFocused', 'canGoBack', 'getRootState', 'getState', 'getParent', 'getCurrentRoute', 'getCurrentOptions']);\n  var listeners = {};\n\n  var removeListener = function removeListener(event, callback) {\n    if (listeners[event]) {\n      listeners[event] = listeners[event].filter(function (cb) {\n        return cb !== callback;\n      });\n    }\n  };\n\n  var current = null;\n  var ref = (0, _extends2.default)({\n    get current() {\n      return current;\n    },\n\n    set current(value) {\n      current = value;\n\n      if (value != null) {\n        Object.entries(listeners).forEach(function (_ref) {\n          var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n              event = _ref2[0],\n              callbacks = _ref2[1];\n\n          callbacks.forEach(function (callback) {\n            value.addListener(event, callback);\n          });\n        });\n      }\n    },\n\n    isReady: function isReady() {\n      if (current == null) {\n        return false;\n      }\n\n      return current.isReady();\n    }\n  }, methods.reduce(function (acc, name) {\n    acc[name] = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (current == null) {\n        switch (name) {\n          case 'addListener':\n            {\n              var event = args[0],\n                  callback = args[1];\n              listeners[event] = listeners[event] || [];\n              listeners[event].push(callback);\n              return function () {\n                return removeListener(event, callback);\n              };\n            }\n\n          case 'removeListener':\n            {\n              var _event = args[0],\n                  _callback = args[1];\n              removeListener(_event, _callback);\n              break;\n            }\n\n          default:\n            console.error(NOT_INITIALIZED_ERROR);\n        }\n      } else {\n        var _current;\n\n        return (_current = current)[name].apply(_current, args);\n      }\n    };\n\n    return acc;\n  }, {}));\n  return ref;\n}","map":{"version":3,"sources":["createNavigationContainerRef.tsx"],"names":["NOT_INITIALIZED_ERROR","methods","Object","listeners","removeListener","cb","current","ref","value","callbacks","callback","isReady","acc","args","console"],"mappings":"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","sourcesContent":["import { CommonActions } from '@react-navigation/routers';\n\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerRef,\n  NavigationContainerRefWithCurrent,\n} from './types';\n\nexport const NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\n\nexport default function createNavigationContainerRef<\n  ParamList extends {} = ReactNavigation.RootParamList\n>(): NavigationContainerRefWithCurrent<ParamList> {\n  const methods = [\n    ...Object.keys(CommonActions),\n    'addListener',\n    'removeListener',\n    'resetRoot',\n    'dispatch',\n    'isFocused',\n    'canGoBack',\n    'getRootState',\n    'getState',\n    'getParent',\n    'getCurrentRoute',\n    'getCurrentOptions',\n  ] as const;\n\n  const listeners: Record<string, ((...args: any[]) => void)[]> = {};\n\n  const removeListener = (\n    event: string,\n    callback: (...args: any[]) => void\n  ) => {\n    if (listeners[event]) {\n      listeners[event] = listeners[event].filter((cb) => cb !== callback);\n    }\n  };\n\n  let current: NavigationContainerRef<ParamList> | null = null;\n\n  const ref: NavigationContainerRefWithCurrent<ParamList> = {\n    get current() {\n      return current;\n    },\n    set current(value: NavigationContainerRef<ParamList> | null) {\n      current = value;\n\n      if (value != null) {\n        Object.entries(listeners).forEach(([event, callbacks]) => {\n          callbacks.forEach((callback) => {\n            value.addListener(\n              event as keyof NavigationContainerEventMap,\n              callback\n            );\n          });\n        });\n      }\n    },\n    isReady: () => {\n      if (current == null) {\n        return false;\n      }\n\n      return current.isReady();\n    },\n    ...methods.reduce<any>((acc, name) => {\n      acc[name] = (...args: any[]) => {\n        if (current == null) {\n          switch (name) {\n            case 'addListener': {\n              const [event, callback] = args;\n\n              listeners[event] = listeners[event] || [];\n              listeners[event].push(callback);\n\n              return () => removeListener(event, callback);\n            }\n            case 'removeListener': {\n              const [event, callback] = args;\n\n              removeListener(event, callback);\n              break;\n            }\n            default:\n              console.error(NOT_INITIALIZED_ERROR);\n          }\n        } else {\n          // @ts-expect-error: this is ok\n          return current[name](...args);\n        }\n      };\n      return acc;\n    }, {}),\n  };\n\n  return ref;\n}\n"]},"metadata":{},"sourceType":"script"}