{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nvar _EventEmitter = _interopRequireDefault(require(\"../../vendor/react-native/emitter/_EventEmitter\"));\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar isPrefixed = _ExecutionEnvironment.canUseDOM && !document.hasOwnProperty('hidden') && document.hasOwnProperty('webkitHidden');\nvar EVENT_TYPES = ['change', 'memoryWarning'];\nvar VISIBILITY_CHANGE_EVENT = isPrefixed ? 'webkitvisibilitychange' : 'visibilitychange';\nvar VISIBILITY_STATE_PROPERTY = isPrefixed ? 'webkitVisibilityState' : 'visibilityState';\nvar AppStates = {\n  BACKGROUND: 'background',\n  ACTIVE: 'active'\n};\nvar changeEmitter = null;\n\nvar AppState = function () {\n  function AppState() {}\n\n  AppState.addEventListener = function addEventListener(type, handler) {\n    if (AppState.isAvailable) {\n      (0, _invariant.default)(EVENT_TYPES.indexOf(type) !== -1, 'Trying to subscribe to unknown event: \"%s\"', type);\n\n      if (type === 'change') {\n        if (!changeEmitter) {\n          changeEmitter = new _EventEmitter.default();\n          document.addEventListener(VISIBILITY_CHANGE_EVENT, function () {\n            if (changeEmitter) {\n              changeEmitter.emit('change', AppState.currentState);\n            }\n          }, false);\n        }\n\n        return changeEmitter.addListener(type, handler);\n      }\n    }\n  };\n\n  AppState.removeEventListener = function removeEventListener(type, handler) {\n    if (AppState.isAvailable) {\n      console.error(\"AppState.removeListener('\" + type + \"', ...): Method has been \" + 'deprecated. Please instead use `remove()` on the subscription ' + 'returned by `AppState.addEventListener`.');\n      (0, _invariant.default)(EVENT_TYPES.indexOf(type) !== -1, 'Trying to remove listener for unknown event: \"%s\"', type);\n\n      if (type === 'change' && changeEmitter) {\n        changeEmitter.removeListener(handler);\n      }\n    }\n  };\n\n  _createClass(AppState, null, [{\n    key: \"currentState\",\n    get: function get() {\n      if (!AppState.isAvailable) {\n        return AppStates.ACTIVE;\n      }\n\n      switch (document[VISIBILITY_STATE_PROPERTY]) {\n        case 'hidden':\n        case 'prerender':\n        case 'unloaded':\n          return AppStates.BACKGROUND;\n\n        default:\n          return AppStates.ACTIVE;\n      }\n    }\n  }]);\n\n  return AppState;\n}();\n\nexports.default = AppState;\nAppState.isAvailable = _ExecutionEnvironment.canUseDOM && document[VISIBILITY_STATE_PROPERTY];","map":{"version":3,"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","isPrefixed","canUseDOM","document","hasOwnProperty","EVENT_TYPES","VISIBILITY_CHANGE_EVENT","VISIBILITY_STATE_PROPERTY","AppStates","BACKGROUND","ACTIVE","changeEmitter","AppState","addEventListener","type","handler","isAvailable","invariant","indexOf","EventEmitter","emit","currentState","addListener","removeEventListener","console","error","removeListener","get"],"sources":["C:/Users/adars/AdarshToDo/node_modules/react-native-web/dist/exports/AppState/index.js"],"sourcesContent":["function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nimport EventEmitter from '../../vendor/react-native/emitter/_EventEmitter'; // Android 4.4 browser\n\nvar isPrefixed = canUseDOM && !document.hasOwnProperty('hidden') && document.hasOwnProperty('webkitHidden');\nvar EVENT_TYPES = ['change', 'memoryWarning'];\nvar VISIBILITY_CHANGE_EVENT = isPrefixed ? 'webkitvisibilitychange' : 'visibilitychange';\nvar VISIBILITY_STATE_PROPERTY = isPrefixed ? 'webkitVisibilityState' : 'visibilityState';\nvar AppStates = {\n  BACKGROUND: 'background',\n  ACTIVE: 'active'\n};\nvar changeEmitter = null;\n\nvar AppState = /*#__PURE__*/function () {\n  function AppState() {}\n\n  AppState.addEventListener = function addEventListener(type, handler) {\n    if (AppState.isAvailable) {\n      invariant(EVENT_TYPES.indexOf(type) !== -1, 'Trying to subscribe to unknown event: \"%s\"', type);\n\n      if (type === 'change') {\n        if (!changeEmitter) {\n          changeEmitter = new EventEmitter();\n          document.addEventListener(VISIBILITY_CHANGE_EVENT, function () {\n            if (changeEmitter) {\n              changeEmitter.emit('change', AppState.currentState);\n            }\n          }, false);\n        }\n\n        return changeEmitter.addListener(type, handler);\n      }\n    }\n  };\n\n  AppState.removeEventListener = function removeEventListener(type, handler) {\n    if (AppState.isAvailable) {\n      console.error(\"AppState.removeListener('\" + type + \"', ...): Method has been \" + 'deprecated. Please instead use `remove()` on the subscription ' + 'returned by `AppState.addEventListener`.');\n      invariant(EVENT_TYPES.indexOf(type) !== -1, 'Trying to remove listener for unknown event: \"%s\"', type);\n\n      if (type === 'change' && changeEmitter) {\n        changeEmitter.removeListener(handler);\n      }\n    }\n  };\n\n  _createClass(AppState, null, [{\n    key: \"currentState\",\n    get: function get() {\n      if (!AppState.isAvailable) {\n        return AppStates.ACTIVE;\n      }\n\n      switch (document[VISIBILITY_STATE_PROPERTY]) {\n        case 'hidden':\n        case 'prerender':\n        case 'unloaded':\n          return AppStates.BACKGROUND;\n\n        default:\n          return AppStates.ACTIVE;\n      }\n    }\n  }]);\n\n  return AppState;\n}();\n\nAppState.isAvailable = canUseDOM && document[VISIBILITY_STATE_PROPERTY];\nexport { AppState as default };"],"mappings":"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"},"metadata":{},"sourceType":"script"}