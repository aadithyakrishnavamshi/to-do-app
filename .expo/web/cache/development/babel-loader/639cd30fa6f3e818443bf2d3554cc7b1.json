{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = TabBarIcon;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Badge = _interopRequireDefault(require(\"./Badge\"));\n\nfunction TabBarIcon(_ref) {\n  var _ = _ref.route,\n      horizontal = _ref.horizontal,\n      badge = _ref.badge,\n      badgeStyle = _ref.badgeStyle,\n      activeOpacity = _ref.activeOpacity,\n      inactiveOpacity = _ref.inactiveOpacity,\n      activeTintColor = _ref.activeTintColor,\n      inactiveTintColor = _ref.inactiveTintColor,\n      renderIcon = _ref.renderIcon,\n      style = _ref.style;\n  var size = 25;\n  return _react.default.createElement(_reactNative.View, {\n    style: [horizontal ? styles.iconHorizontal : styles.iconVertical, style]\n  }, _react.default.createElement(_reactNative.View, {\n    style: [styles.icon, {\n      opacity: activeOpacity\n    }]\n  }, renderIcon({\n    focused: true,\n    size: size,\n    color: activeTintColor\n  })), _react.default.createElement(_reactNative.View, {\n    style: [styles.icon, {\n      opacity: inactiveOpacity\n    }]\n  }, renderIcon({\n    focused: false,\n    size: size,\n    color: inactiveTintColor\n  })), _react.default.createElement(_Badge.default, {\n    visible: badge != null,\n    style: [styles.badge, horizontal ? styles.badgeHorizontal : styles.badgeVertical, badgeStyle],\n    size: size * 3 / 4\n  }, badge));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  icon: {\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    minWidth: 25\n  },\n  iconVertical: {\n    flex: 1\n  },\n  iconHorizontal: {\n    height: '100%',\n    marginTop: 3\n  },\n  badge: {\n    position: 'absolute',\n    left: 3\n  },\n  badgeVertical: {\n    top: 3\n  },\n  badgeHorizontal: {\n    top: 7\n  }\n});","map":{"version":3,"sources":["TabBarIcon.tsx"],"names":["route","style","size","horizontal","styles","opacity","activeOpacity","renderIcon","focused","color","activeTintColor","inactiveOpacity","inactiveTintColor","badge","icon","position","alignSelf","alignItems","justifyContent","height","width","minWidth","iconVertical","flex","iconHorizontal","marginTop","left","badgeVertical","top","badgeHorizontal"],"mappings":";;;;;;;AACA;;AACA;;AAQA;;AAmBe,SAAA,UAAA,CAAA,IAAA,EAWL;EAXyB,IAAA,CAAA,GAWzB,IAXyB,CACjCA,KADiC;EAAA,IAAA,UAAA,GAWzB,IAXyB,CAAA,UAAA;EAAA,IAAA,KAAA,GAWzB,IAXyB,CAAA,KAAA;EAAA,IAAA,UAAA,GAWzB,IAXyB,CAAA,UAAA;EAAA,IAAA,aAAA,GAWzB,IAXyB,CAAA,aAAA;EAAA,IAAA,eAAA,GAWzB,IAXyB,CAAA,eAAA;EAAA,IAAA,eAAA,GAWzB,IAXyB,CAAA,eAAA;EAAA,IAAA,iBAAA,GAWzB,IAXyB,CAAA,iBAAA;EAAA,IAAA,UAAA,GAWzB,IAXyB,CAAA,UAAA;EAAA,IAUjCC,KAViC,GAWzB,IAXyB,CAUjCA,KAViC;EAYjC,IAAMC,IAAI,GADF,EACR;EAIA,OACE,cAAA,CAAA,aAAA,CAAA,iBAAA,EAAA;IACE,KAAK,EAAE,CAACC,UAAU,GAAGC,MAAM,CAAT,cAAA,GAA2BA,MAAM,CAA5C,YAAA,EAAA,KAAA;EADT,CAAA,EAGE,cAAA,CAAA,aAAA,CAAA,iBAAA,EAAA;IAAM,KAAK,EAAE,CAACA,MAAM,CAAP,IAAA,EAAc;MAAEC,OAAO,EAAEC;IAAX,CAAd;EAAb,CAAA,EACGC,UAAU,CAAC;IACVC,OAAO,EADG,IAAA;IAEVN,IAFU,EAEVA,IAFU;IAGVO,KAAK,EAAEC;EAHG,CAAD,CADb,CAHF,EAUE,cAAA,CAAA,aAAA,CAAA,iBAAA,EAAA;IAAM,KAAK,EAAE,CAACN,MAAM,CAAP,IAAA,EAAc;MAAEC,OAAO,EAAEM;IAAX,CAAd;EAAb,CAAA,EACGJ,UAAU,CAAC;IACVC,OAAO,EADG,KAAA;IAEVN,IAFU,EAEVA,IAFU;IAGVO,KAAK,EAAEG;EAHG,CAAD,CADb,CAVF,EAiBE,cAAA,CAAA,aAAA,CAAA,cAAA,EAAA;IACE,OAAO,EAAEC,KAAK,IADhB,IAAA;IAEE,KAAK,EAAE,CACLT,MAAM,CADD,KAAA,EAELD,UAAU,GAAGC,MAAM,CAAT,eAAA,GAA4BA,MAAM,CAFvC,aAAA,EAFT,UAES,CAFT;IAOE,IAAI,EAAGF,IAAI,GAAL,CAACA,GAAY;EAPrB,CAAA,EAlBJ,KAkBI,CAjBF,CADF;AA+BD;;AAED,IAAME,MAAM,GAAG,uBAAA,CAAA,MAAA,CAAkB;EAC/BU,IAAI,EAAE;IAIJC,QAAQ,EAJJ,UAAA;IAKJC,SAAS,EALL,QAAA;IAMJC,UAAU,EANN,QAAA;IAOJC,cAAc,EAPV,QAAA;IAQJC,MAAM,EARF,MAAA;IASJC,KAAK,EATD,MAAA;IAWJC,QAAQ,EAAE;EAXN,CADyB;EAc/BC,YAAY,EAAE;IACZC,IAAI,EAAE;EADM,CAdiB;EAiB/BC,cAAc,EAAE;IACdL,MAAM,EADQ,MAAA;IAEdM,SAAS,EAAE;EAFG,CAjBe;EAqB/BZ,KAAK,EAAE;IACLE,QAAQ,EADH,UAAA;IAELW,IAAI,EAAE;EAFD,CArBwB;EAyB/BC,aAAa,EAAE;IACbC,GAAG,EAAE;EADQ,CAzBgB;EA4B/BC,eAAe,EAAE;IACfD,GAAG,EAAE;EADU;AA5Bc,CAAlB,CAAf","sourcesContent":["import type { Route } from '@react-navigation/native';\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport Badge from './Badge';\n\ntype Props = {\n  route: Route<string>;\n  horizontal: boolean;\n  badge?: string | number;\n  badgeStyle?: StyleProp<TextStyle>;\n  activeOpacity: number;\n  inactiveOpacity: number;\n  activeTintColor: string;\n  inactiveTintColor: string;\n  renderIcon: (props: {\n    focused: boolean;\n    color: string;\n    size: number;\n  }) => React.ReactNode;\n  style: StyleProp<ViewStyle>;\n};\n\nexport default function TabBarIcon({\n  route: _,\n  horizontal,\n  badge,\n  badgeStyle,\n  activeOpacity,\n  inactiveOpacity,\n  activeTintColor,\n  inactiveTintColor,\n  renderIcon,\n  style,\n}: Props) {\n  const size = 25;\n\n  // We render the icon twice at the same position on top of each other:\n  // active and inactive one, so we can fade between them.\n  return (\n    <View\n      style={[horizontal ? styles.iconHorizontal : styles.iconVertical, style]}\n    >\n      <View style={[styles.icon, { opacity: activeOpacity }]}>\n        {renderIcon({\n          focused: true,\n          size,\n          color: activeTintColor,\n        })}\n      </View>\n      <View style={[styles.icon, { opacity: inactiveOpacity }]}>\n        {renderIcon({\n          focused: false,\n          size,\n          color: inactiveTintColor,\n        })}\n      </View>\n      <Badge\n        visible={badge != null}\n        style={[\n          styles.badge,\n          horizontal ? styles.badgeHorizontal : styles.badgeVertical,\n          badgeStyle,\n        ]}\n        size={(size * 3) / 4}\n      >\n        {badge}\n      </Badge>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25,\n  },\n  iconVertical: {\n    flex: 1,\n  },\n  iconHorizontal: {\n    height: '100%',\n    marginTop: 3,\n  },\n  badge: {\n    position: 'absolute',\n    left: 3,\n  },\n  badgeVertical: {\n    top: 3,\n  },\n  badgeHorizontal: {\n    top: 7,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}