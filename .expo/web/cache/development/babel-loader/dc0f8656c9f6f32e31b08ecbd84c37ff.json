{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = HeaderTitle;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _excluded = [\"tintColor\", \"style\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction HeaderTitle(_ref) {\n  var tintColor = _ref.tintColor,\n      style = _ref.style,\n      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n\n  var _useTheme = (0, _native.useTheme)(),\n      colors = _useTheme.colors;\n\n  return React.createElement(_reactNative.Animated.Text, _extends({\n    accessibilityRole: \"header\",\n    \"aria-level\": \"1\",\n    numberOfLines: 1\n  }, rest, {\n    style: [styles.title, {\n      color: tintColor === undefined ? colors.text : tintColor\n    }, style]\n  }));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  title: _reactNative.Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600'\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal'\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500'\n    }\n  })\n});","map":{"version":3,"sources":["HeaderTitle.tsx"],"names":["rest","colors","styles","color","tintColor","title","ios","fontSize","fontWeight","android","fontFamily","default"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAee,SAAA,WAAA,CAAA,IAAA,EAA2D;EAAtC,IAAA,SAAA,GAAsC,IAAtC,CAAA,SAAA;EAAA,IAAA,KAAA,GAAsC,IAAtC,CAAA,KAAA;EAAA,IAAuBA,IAAvB,0CAAsC,IAAtC;;EAClC,gBAAA,IAAA,gBAAA,GAAA;EAAA,IAAQC,MAAR,aAAQA,MAAR;;EAEA,OACE,KAAA,CAAA,aAAA,CAAA,qBAAA,CAAA,IAAA,EAAA,QAAA,CAAA;IACE,iBAAiB,EADnB,QAAA;IAEE,cAFF,GAAA;IAGE,aAAa,EAAE;EAHjB,CAAA,EAAA,IAAA,EAAA;IAKE,KAAK,EAAE,CACLC,MAAM,CADD,KAAA,EAEL;MAAEC,KAAK,EAAEC,SAAS,KAATA,SAAAA,GAA0BH,MAAM,CAAhCG,IAAAA,GAAwCA;IAAjD,CAFK,EAAA,KAAA;EALT,CAAA,CAAA,CADF;AAaD;;AAED,IAAMF,MAAM,GAAG,uBAAA,CAAA,MAAA,CAAkB;EAC/BG,KAAK,EAAE,qBAAA,CAAA,MAAA,CAAgB;IACrBC,GAAG,EAAE;MACHC,QAAQ,EADL,EAAA;MAEHC,UAAU,EAAE;IAFT,CADgB;IAKrBC,OAAO,EAAE;MACPF,QAAQ,EADD,EAAA;MAEPG,UAAU,EAFH,mBAAA;MAGPF,UAAU,EAAE;IAHL,CALY;IAUrBG,OAAO,EAAE;MACPJ,QAAQ,EADD,EAAA;MAEPC,UAAU,EAAE;IAFL;EAVY,CAAhB;AADwB,CAAlB,CAAf","sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextProps,\n  TextStyle,\n} from 'react-native';\n\ntype Props = Omit<TextProps, 'style'> & {\n  tintColor?: string;\n  children?: string;\n  style?: Animated.WithAnimatedValue<StyleProp<TextStyle>>;\n};\n\nexport default function HeaderTitle({ tintColor, style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <Animated.Text\n      accessibilityRole=\"header\"\n      aria-level=\"1\"\n      numberOfLines={1}\n      {...rest}\n      style={[\n        styles.title,\n        { color: tintColor === undefined ? colors.text : tintColor },\n        style,\n      ]}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600',\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500',\n    },\n  }),\n});\n"]},"metadata":{},"sourceType":"script"}