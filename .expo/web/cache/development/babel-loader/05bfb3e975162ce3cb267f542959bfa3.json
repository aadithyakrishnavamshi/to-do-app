{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nvar EventSubscriptionVendor = function () {\n  function EventSubscriptionVendor() {\n    this._subscriptionsForType = {};\n  }\n\n  var _proto = EventSubscriptionVendor.prototype;\n\n  _proto.addSubscription = function addSubscription(eventType, subscription) {\n    (0, _invariant.default)(subscription.subscriber === this, 'The subscriber of the subscription is incorrectly set.');\n\n    if (!this._subscriptionsForType[eventType]) {\n      this._subscriptionsForType[eventType] = [];\n    }\n\n    var key = this._subscriptionsForType[eventType].length;\n\n    this._subscriptionsForType[eventType].push(subscription);\n\n    subscription.eventType = eventType;\n    subscription.key = key;\n    return subscription;\n  };\n\n  _proto.removeAllSubscriptions = function removeAllSubscriptions(eventType) {\n    if (eventType == null) {\n      this._subscriptionsForType = {};\n    } else {\n      delete this._subscriptionsForType[eventType];\n    }\n  };\n\n  _proto.removeSubscription = function removeSubscription(subscription) {\n    var eventType = subscription.eventType;\n    var key = subscription.key;\n    var subscriptionsForType = this._subscriptionsForType[eventType];\n\n    if (subscriptionsForType) {\n      delete subscriptionsForType[key];\n    }\n  };\n\n  _proto.getSubscriptionsForType = function getSubscriptionsForType(eventType) {\n    return this._subscriptionsForType[eventType];\n  };\n\n  return EventSubscriptionVendor;\n}();\n\nvar _default = EventSubscriptionVendor;\nexports.default = _default;","map":{"version":3,"names":["EventSubscriptionVendor","_subscriptionsForType","_proto","prototype","addSubscription","eventType","subscription","invariant","subscriber","key","length","push","removeAllSubscriptions","removeSubscription","subscriptionsForType","getSubscriptionsForType"],"sources":["C:/Users/adars/AdarshToDo/node_modules/react-native-web/dist/vendor/react-native/emitter/_EventSubscriptionVendor.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\nimport invariant from 'fbjs/lib/invariant';\n\n/**\n * EventSubscriptionVendor stores a set of EventSubscriptions that are\n * subscribed to a particular event type.\n */\nvar EventSubscriptionVendor = /*#__PURE__*/function () {\n  function EventSubscriptionVendor() {\n    this._subscriptionsForType = {};\n  }\n  /**\n   * Adds a subscription keyed by an event type.\n   *\n   * @param {string} eventType\n   * @param {EventSubscription} subscription\n   */\n\n\n  var _proto = EventSubscriptionVendor.prototype;\n\n  _proto.addSubscription = function addSubscription(eventType, subscription) {\n    invariant(subscription.subscriber === this, 'The subscriber of the subscription is incorrectly set.');\n\n    if (!this._subscriptionsForType[eventType]) {\n      this._subscriptionsForType[eventType] = [];\n    }\n\n    var key = this._subscriptionsForType[eventType].length;\n\n    this._subscriptionsForType[eventType].push(subscription);\n\n    subscription.eventType = eventType;\n    subscription.key = key;\n    return subscription;\n  }\n  /**\n   * Removes a bulk set of the subscriptions.\n   *\n   * @param {?string} eventType - Optional name of the event type whose\n   *   registered supscriptions to remove, if null remove all subscriptions.\n   */\n  ;\n\n  _proto.removeAllSubscriptions = function removeAllSubscriptions(eventType) {\n    if (eventType == null) {\n      this._subscriptionsForType = {};\n    } else {\n      delete this._subscriptionsForType[eventType];\n    }\n  }\n  /**\n   * Removes a specific subscription. Instead of calling this function, call\n   * `subscription.remove()` directly.\n   *\n   * @param {object} subscription\n   */\n  ;\n\n  _proto.removeSubscription = function removeSubscription(subscription) {\n    var eventType = subscription.eventType;\n    var key = subscription.key;\n    var subscriptionsForType = this._subscriptionsForType[eventType];\n\n    if (subscriptionsForType) {\n      delete subscriptionsForType[key];\n    }\n  }\n  /**\n   * Returns the array of subscriptions that are currently registered for the\n   * given event type.\n   *\n   * Note: This array can be potentially sparse as subscriptions are deleted\n   * from it when they are removed.\n   *\n   * TODO: This returns a nullable array. wat?\n   *\n   * @param {string} eventType\n   * @returns {?array}\n   */\n  ;\n\n  _proto.getSubscriptionsForType = function getSubscriptionsForType(eventType) {\n    return this._subscriptionsForType[eventType];\n  };\n\n  return EventSubscriptionVendor;\n}();\n\nexport default EventSubscriptionVendor;"],"mappings":"AASA;;;;;;;;;AAEA;;AAMA,IAAIA,uBAAuB,GAAgB,YAAY;EACrD,SAASA,uBAAT,GAAmC;IACjC,KAAKC,qBAAL,GAA6B,EAA7B;EACD;;EASD,IAAIC,MAAM,GAAGF,uBAAuB,CAACG,SAArC;;EAEAD,MAAM,CAACE,eAAP,GAAyB,SAASA,eAAT,CAAyBC,SAAzB,EAAoCC,YAApC,EAAkD;IACzE,IAAAC,kBAAA,EAAUD,YAAY,CAACE,UAAb,KAA4B,IAAtC,EAA4C,wDAA5C;;IAEA,IAAI,CAAC,KAAKP,qBAAL,CAA2BI,SAA3B,CAAL,EAA4C;MAC1C,KAAKJ,qBAAL,CAA2BI,SAA3B,IAAwC,EAAxC;IACD;;IAED,IAAII,GAAG,GAAG,KAAKR,qBAAL,CAA2BI,SAA3B,EAAsCK,MAAhD;;IAEA,KAAKT,qBAAL,CAA2BI,SAA3B,EAAsCM,IAAtC,CAA2CL,YAA3C;;IAEAA,YAAY,CAACD,SAAb,GAAyBA,SAAzB;IACAC,YAAY,CAACG,GAAb,GAAmBA,GAAnB;IACA,OAAOH,YAAP;EACD,CAdD;;EAuBAJ,MAAM,CAACU,sBAAP,GAAgC,SAASA,sBAAT,CAAgCP,SAAhC,EAA2C;IACzE,IAAIA,SAAS,IAAI,IAAjB,EAAuB;MACrB,KAAKJ,qBAAL,GAA6B,EAA7B;IACD,CAFD,MAEO;MACL,OAAO,KAAKA,qBAAL,CAA2BI,SAA3B,CAAP;IACD;EACF,CAND;;EAeAH,MAAM,CAACW,kBAAP,GAA4B,SAASA,kBAAT,CAA4BP,YAA5B,EAA0C;IACpE,IAAID,SAAS,GAAGC,YAAY,CAACD,SAA7B;IACA,IAAII,GAAG,GAAGH,YAAY,CAACG,GAAvB;IACA,IAAIK,oBAAoB,GAAG,KAAKb,qBAAL,CAA2BI,SAA3B,CAA3B;;IAEA,IAAIS,oBAAJ,EAA0B;MACxB,OAAOA,oBAAoB,CAACL,GAAD,CAA3B;IACD;EACF,CARD;;EAuBAP,MAAM,CAACa,uBAAP,GAAiC,SAASA,uBAAT,CAAiCV,SAAjC,EAA4C;IAC3E,OAAO,KAAKJ,qBAAL,CAA2BI,SAA3B,CAAP;EACD,CAFD;;EAIA,OAAOL,uBAAP;AACD,CAhF0C,EAA3C;;eAkFeA,uB"},"metadata":{},"sourceType":"script"}