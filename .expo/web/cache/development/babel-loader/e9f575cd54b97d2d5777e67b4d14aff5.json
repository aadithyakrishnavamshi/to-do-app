{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nvar _requestIdleCallback = _interopRequireWildcard(require(\"../../modules/requestIdleCallback\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar InteractionManager = {\n  Events: {\n    interactionStart: 'interactionStart',\n    interactionComplete: 'interactionComplete'\n  },\n  runAfterInteractions: function runAfterInteractions(task) {\n    var handle;\n    var promise = new Promise(function (resolve) {\n      handle = (0, _requestIdleCallback.default)(function () {\n        if (task) {\n          resolve(task());\n        } else {\n          resolve();\n        }\n      });\n    });\n    return {\n      then: promise.then.bind(promise),\n      done: promise.then.bind(promise),\n      cancel: function cancel() {\n        (0, _requestIdleCallback.cancelIdleCallback)(handle);\n      }\n    };\n  },\n  createInteractionHandle: function createInteractionHandle() {\n    return 1;\n  },\n  clearInteractionHandle: function clearInteractionHandle(handle) {\n    (0, _invariant.default)(!!handle, 'Must provide a handle to clear.');\n  },\n  addListener: function addListener() {}\n};\nvar _default = InteractionManager;\nexports.default = _default;","map":{"version":3,"names":["InteractionManager","Events","interactionStart","interactionComplete","runAfterInteractions","task","handle","promise","Promise","resolve","requestIdleCallback","then","bind","done","cancel","cancelIdleCallback","createInteractionHandle","clearInteractionHandle","invariant","addListener"],"sources":["C:/Users/adars/AdarshToDo/node_modules/react-native-web/dist/exports/InteractionManager/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\nimport requestIdleCallback, { cancelIdleCallback } from '../../modules/requestIdleCallback';\nvar InteractionManager = {\n  Events: {\n    interactionStart: 'interactionStart',\n    interactionComplete: 'interactionComplete'\n  },\n\n  /**\n   * Schedule a function to run after all interactions have completed.\n   */\n  runAfterInteractions: function runAfterInteractions(task) {\n    var handle;\n    var promise = new Promise(function (resolve) {\n      handle = requestIdleCallback(function () {\n        if (task) {\n          resolve(task());\n        } else {\n          resolve();\n        }\n      });\n    });\n    return {\n      then: promise.then.bind(promise),\n      done: promise.then.bind(promise),\n      cancel: function cancel() {\n        cancelIdleCallback(handle);\n      }\n    };\n  },\n\n  /**\n   * Notify manager that an interaction has started.\n   */\n  createInteractionHandle: function createInteractionHandle() {\n    return 1;\n  },\n\n  /**\n   * Notify manager that an interaction has completed.\n   */\n  clearInteractionHandle: function clearInteractionHandle(handle) {\n    invariant(!!handle, 'Must provide a handle to clear.');\n  },\n  addListener: function addListener() {}\n};\nexport default InteractionManager;"],"mappings":";;;;;;;AASA;;AACA;;;;;;AACA,IAAIA,kBAAkB,GAAG;EACvBC,MAAM,EAAE;IACNC,gBAAgB,EAAE,kBADZ;IAENC,mBAAmB,EAAE;EAFf,CADe;EASvBC,oBAAoB,EAAE,SAASA,oBAAT,CAA8BC,IAA9B,EAAoC;IACxD,IAAIC,MAAJ;IACA,IAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;MAC3CH,MAAM,GAAG,IAAAI,4BAAA,EAAoB,YAAY;QACvC,IAAIL,IAAJ,EAAU;UACRI,OAAO,CAACJ,IAAI,EAAL,CAAP;QACD,CAFD,MAEO;UACLI,OAAO;QACR;MACF,CANQ,CAAT;IAOD,CARa,CAAd;IASA,OAAO;MACLE,IAAI,EAAEJ,OAAO,CAACI,IAAR,CAAaC,IAAb,CAAkBL,OAAlB,CADD;MAELM,IAAI,EAAEN,OAAO,CAACI,IAAR,CAAaC,IAAb,CAAkBL,OAAlB,CAFD;MAGLO,MAAM,EAAE,SAASA,MAAT,GAAkB;QACxB,IAAAC,uCAAA,EAAmBT,MAAnB;MACD;IALI,CAAP;EAOD,CA3BsB;EAgCvBU,uBAAuB,EAAE,SAASA,uBAAT,GAAmC;IAC1D,OAAO,CAAP;EACD,CAlCsB;EAuCvBC,sBAAsB,EAAE,SAASA,sBAAT,CAAgCX,MAAhC,EAAwC;IAC9D,IAAAY,kBAAA,EAAU,CAAC,CAACZ,MAAZ,EAAoB,iCAApB;EACD,CAzCsB;EA0CvBa,WAAW,EAAE,SAASA,WAAT,GAAuB,CAAE;AA1Cf,CAAzB;eA4CenB,kB"},"metadata":{},"sourceType":"script"}