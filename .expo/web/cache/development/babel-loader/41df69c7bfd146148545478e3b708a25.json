{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = BottomTabView;\n\nvar _extends3 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _elements = require(\"@react-navigation/elements\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _BottomTabBarHeightCallbackContext = _interopRequireDefault(require(\"../utils/BottomTabBarHeightCallbackContext\"));\n\nvar _BottomTabBarHeightContext = _interopRequireDefault(require(\"../utils/BottomTabBarHeightContext\"));\n\nvar _BottomTabBar = _interopRequireWildcard(require(\"./BottomTabBar\"));\n\nvar _ScreenFallback = require(\"./ScreenFallback\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction BottomTabView(props) {\n  var _props$tabBar = props.tabBar,\n      tabBar = _props$tabBar === void 0 ? function (props) {\n    return React.createElement(_BottomTabBar.default, props);\n  } : _props$tabBar,\n      state = props.state,\n      navigation = props.navigation,\n      descriptors = props.descriptors,\n      safeAreaInsets = props.safeAreaInsets,\n      _props$detachInactive = props.detachInactiveScreens,\n      detachInactiveScreens = _props$detachInactive === void 0 ? _reactNative.Platform.OS === 'web' || _reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' : _props$detachInactive,\n      sceneContainerStyle = props.sceneContainerStyle;\n  var focusedRouteKey = state.routes[state.index].key;\n\n  var _React$useState = React.useState([focusedRouteKey]),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      loaded = _React$useState2[0],\n      setLoaded = _React$useState2[1];\n\n  if (!loaded.includes(focusedRouteKey)) {\n    setLoaded([].concat((0, _toConsumableArray2.default)(loaded), [focusedRouteKey]));\n  }\n\n  var dimensions = _elements.SafeAreaProviderCompat.initialMetrics.frame;\n\n  var _React$useState3 = React.useState(function () {\n    return (0, _BottomTabBar.getTabBarHeight)({\n      state: state,\n      descriptors: descriptors,\n      dimensions: dimensions,\n      layout: {\n        width: dimensions.width,\n        height: 0\n      },\n      insets: (0, _extends3.default)({}, _elements.SafeAreaProviderCompat.initialMetrics.insets, props.safeAreaInsets),\n      style: descriptors[state.routes[state.index].key].options.tabBarStyle\n    });\n  }),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      tabBarHeight = _React$useState4[0],\n      setTabBarHeight = _React$useState4[1];\n\n  var renderTabBar = function renderTabBar() {\n    return React.createElement(_reactNativeSafeAreaContext.SafeAreaInsetsContext.Consumer, null, function (insets) {\n      var _ref, _safeAreaInsets$top, _ref2, _safeAreaInsets$right, _ref3, _safeAreaInsets$botto, _ref4, _safeAreaInsets$left;\n\n      return tabBar({\n        state: state,\n        descriptors: descriptors,\n        navigation: navigation,\n        insets: {\n          top: (_ref = (_safeAreaInsets$top = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.top) !== null && _safeAreaInsets$top !== void 0 ? _safeAreaInsets$top : insets === null || insets === void 0 ? void 0 : insets.top) !== null && _ref !== void 0 ? _ref : 0,\n          right: (_ref2 = (_safeAreaInsets$right = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) !== null && _safeAreaInsets$right !== void 0 ? _safeAreaInsets$right : insets === null || insets === void 0 ? void 0 : insets.right) !== null && _ref2 !== void 0 ? _ref2 : 0,\n          bottom: (_ref3 = (_safeAreaInsets$botto = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) !== null && _safeAreaInsets$botto !== void 0 ? _safeAreaInsets$botto : insets === null || insets === void 0 ? void 0 : insets.bottom) !== null && _ref3 !== void 0 ? _ref3 : 0,\n          left: (_ref4 = (_safeAreaInsets$left = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) !== null && _safeAreaInsets$left !== void 0 ? _safeAreaInsets$left : insets === null || insets === void 0 ? void 0 : insets.left) !== null && _ref4 !== void 0 ? _ref4 : 0\n        }\n      });\n    });\n  };\n\n  var routes = state.routes;\n  return React.createElement(_elements.SafeAreaProviderCompat, null, React.createElement(_ScreenFallback.MaybeScreenContainer, {\n    enabled: detachInactiveScreens,\n    hasTwoStates: true,\n    style: styles.container\n  }, routes.map(function (route, index) {\n    var descriptor = descriptors[route.key];\n    var _descriptor$options = descriptor.options,\n        _descriptor$options$l = _descriptor$options.lazy,\n        lazy = _descriptor$options$l === void 0 ? true : _descriptor$options$l,\n        unmountOnBlur = _descriptor$options.unmountOnBlur;\n    var isFocused = state.index === index;\n\n    if (unmountOnBlur && !isFocused) {\n      return null;\n    }\n\n    if (lazy && !loaded.includes(route.key) && !isFocused) {\n      return null;\n    }\n\n    var _descriptor$options$h = descriptor.options.header,\n        header = _descriptor$options$h === void 0 ? function (_ref5) {\n      var layout = _ref5.layout,\n          options = _ref5.options;\n      return React.createElement(_elements.Header, _extends({}, options, {\n        layout: layout,\n        title: (0, _elements.getHeaderTitle)(options, route.name)\n      }));\n    } : _descriptor$options$h;\n    return React.createElement(_ScreenFallback.MaybeScreen, {\n      key: route.key,\n      style: [_reactNative.StyleSheet.absoluteFill, {\n        zIndex: isFocused ? 0 : -1\n      }],\n      visible: isFocused,\n      enabled: detachInactiveScreens\n    }, React.createElement(_BottomTabBarHeightContext.default.Provider, {\n      value: tabBarHeight\n    }, React.createElement(_elements.Screen, {\n      focused: isFocused,\n      route: descriptor.route,\n      navigation: descriptor.navigation,\n      headerShown: descriptor.options.headerShown,\n      headerTransparent: descriptor.options.headerTransparent,\n      headerStatusBarHeight: descriptor.options.headerStatusBarHeight,\n      header: header({\n        layout: dimensions,\n        route: descriptor.route,\n        navigation: descriptor.navigation,\n        options: descriptor.options\n      }),\n      style: sceneContainerStyle\n    }, descriptor.render())));\n  })), React.createElement(_BottomTabBarHeightCallbackContext.default.Provider, {\n    value: setTabBarHeight\n  }, renderTabBar()));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["BottomTabView.tsx"],"names":["tabBar","props","detachInactiveScreens","Platform","sceneContainerStyle","focusedRouteKey","state","React","loaded","setLoaded","dimensions","SafeAreaProviderCompat","getTabBarHeight","descriptors","layout","width","height","insets","safeAreaInsets","style","tabBarStyle","renderTabBar","navigation","top","right","bottom","left","routes","styles","container","descriptor","route","lazy","unmountOnBlur","isFocused","header","options","getHeaderTitle","StyleSheet","zIndex","tabBarHeight","setTabBarHeight","flex","overflow"],"mappings":"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","sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport type {\n  ParamListBase,\n  TabNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\n\nimport type {\n  BottomTabBarProps,\n  BottomTabDescriptorMap,\n  BottomTabHeaderProps,\n  BottomTabNavigationConfig,\n  BottomTabNavigationHelpers,\n  BottomTabNavigationProp,\n} from '../types';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport BottomTabBarHeightContext from '../utils/BottomTabBarHeightContext';\nimport BottomTabBar, { getTabBarHeight } from './BottomTabBar';\nimport { MaybeScreen, MaybeScreenContainer } from './ScreenFallback';\n\ntype Props = BottomTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: BottomTabNavigationHelpers;\n  descriptors: BottomTabDescriptorMap;\n};\n\nexport default function BottomTabView(props: Props) {\n  const {\n    tabBar = (props: BottomTabBarProps) => <BottomTabBar {...props} />,\n    state,\n    navigation,\n    descriptors,\n    safeAreaInsets,\n    detachInactiveScreens = Platform.OS === 'web' ||\n      Platform.OS === 'android' ||\n      Platform.OS === 'ios',\n    sceneContainerStyle,\n  } = props;\n\n  const focusedRouteKey = state.routes[state.index].key;\n  const [loaded, setLoaded] = React.useState([focusedRouteKey]);\n\n  if (!loaded.includes(focusedRouteKey)) {\n    setLoaded([...loaded, focusedRouteKey]);\n  }\n\n  const dimensions = SafeAreaProviderCompat.initialMetrics.frame;\n  const [tabBarHeight, setTabBarHeight] = React.useState(() =>\n    getTabBarHeight({\n      state,\n      descriptors,\n      dimensions,\n      layout: { width: dimensions.width, height: 0 },\n      insets: {\n        ...SafeAreaProviderCompat.initialMetrics.insets,\n        ...props.safeAreaInsets,\n      },\n      style: descriptors[state.routes[state.index].key].options.tabBarStyle,\n    })\n  );\n\n  const renderTabBar = () => {\n    return (\n      <SafeAreaInsetsContext.Consumer>\n        {(insets) =>\n          tabBar({\n            state: state,\n            descriptors: descriptors,\n            navigation: navigation,\n            insets: {\n              top: safeAreaInsets?.top ?? insets?.top ?? 0,\n              right: safeAreaInsets?.right ?? insets?.right ?? 0,\n              bottom: safeAreaInsets?.bottom ?? insets?.bottom ?? 0,\n              left: safeAreaInsets?.left ?? insets?.left ?? 0,\n            },\n          })\n        }\n      </SafeAreaInsetsContext.Consumer>\n    );\n  };\n\n  const { routes } = state;\n\n  return (\n    <SafeAreaProviderCompat>\n      <MaybeScreenContainer\n        enabled={detachInactiveScreens}\n        hasTwoStates\n        style={styles.container}\n      >\n        {routes.map((route, index) => {\n          const descriptor = descriptors[route.key];\n          const { lazy = true, unmountOnBlur } = descriptor.options;\n          const isFocused = state.index === index;\n\n          if (unmountOnBlur && !isFocused) {\n            return null;\n          }\n\n          if (lazy && !loaded.includes(route.key) && !isFocused) {\n            // Don't render a lazy screen if we've never navigated to it\n            return null;\n          }\n\n          const {\n            header = ({ layout, options }: BottomTabHeaderProps) => (\n              <Header\n                {...options}\n                layout={layout}\n                title={getHeaderTitle(options, route.name)}\n              />\n            ),\n          } = descriptor.options;\n\n          return (\n            <MaybeScreen\n              key={route.key}\n              style={[StyleSheet.absoluteFill, { zIndex: isFocused ? 0 : -1 }]}\n              visible={isFocused}\n              enabled={detachInactiveScreens}\n            >\n              <BottomTabBarHeightContext.Provider value={tabBarHeight}>\n                <Screen\n                  focused={isFocused}\n                  route={descriptor.route}\n                  navigation={descriptor.navigation}\n                  headerShown={descriptor.options.headerShown}\n                  headerTransparent={descriptor.options.headerTransparent}\n                  headerStatusBarHeight={\n                    descriptor.options.headerStatusBarHeight\n                  }\n                  header={header({\n                    layout: dimensions,\n                    route: descriptor.route,\n                    navigation:\n                      descriptor.navigation as BottomTabNavigationProp<ParamListBase>,\n                    options: descriptor.options,\n                  })}\n                  style={sceneContainerStyle}\n                >\n                  {descriptor.render()}\n                </Screen>\n              </BottomTabBarHeightContext.Provider>\n            </MaybeScreen>\n          );\n        })}\n      </MaybeScreenContainer>\n      <BottomTabBarHeightCallbackContext.Provider value={setTabBarHeight}>\n        {renderTabBar()}\n      </BottomTabBarHeightCallbackContext.Provider>\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}