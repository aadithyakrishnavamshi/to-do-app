{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ThemeProvider;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _ThemeContext = _interopRequireDefault(require(\"./ThemeContext\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ThemeProvider(_ref) {\n  var value = _ref.value,\n      children = _ref.children;\n  return React.createElement(_ThemeContext.default.Provider, {\n    value: value\n  }, children);\n}","map":{"version":3,"sources":["ThemeProvider.tsx"],"names":["children","value"],"mappings":";;;;;;;AAAA;;AAGA;;;;;;AAOe,SAAA,aAAA,CAAA,IAAA,EAAmD;EAA5B,IAAA,KAAA,GAA4B,IAA5B,CAAA,KAAA;EAAA,IAASA,QAAT,GAA4B,IAA5B,CAASA,QAAT;EACpC,OACE,KAAA,CAAA,aAAA,CAAA,qBAAA,CAAA,QAAA,EAAA;IAAuB,KAAK,EAAEC;EAA9B,CAAA,EADF,QACE,CADF;AAGD","sourcesContent":["import * as React from 'react';\n\nimport type { Theme } from '../types';\nimport ThemeContext from './ThemeContext';\n\ntype Props = {\n  value: Theme;\n  children: React.ReactNode;\n};\n\nexport default function ThemeProvider({ value, children }: Props) {\n  return (\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}