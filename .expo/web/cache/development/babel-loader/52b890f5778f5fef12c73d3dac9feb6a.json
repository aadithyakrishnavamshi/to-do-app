{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useRegisterNavigator;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _nonSecure = require(\"nanoid/non-secure\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _EnsureSingleNavigator = require(\"./EnsureSingleNavigator\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction useRegisterNavigator() {\n  var _React$useState = React.useState(function () {\n    return (0, _nonSecure.nanoid)();\n  }),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 1),\n      key = _React$useState2[0];\n\n  var container = React.useContext(_EnsureSingleNavigator.SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\\n\\nThis can also happen if there are multiple copies of '@react-navigation' packages installed.\");\n  }\n\n  React.useEffect(function () {\n    var register = container.register,\n        unregister = container.unregister;\n    register(key);\n    return function () {\n      return unregister(key);\n    };\n  }, [container, key]);\n  return key;\n}","map":{"version":3,"sources":["useRegisterNavigator.tsx"],"names":["React","container","unregister","register"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;;;;;AAMe,SAAA,oBAAA,GAAgC;EAC7C,sBAAcA,KAAK,CAALA,QAAAA,CAAe;IAAA,OAA7B,IAAA,iBAAA,GAA6B;EAAA,CAAfA,CAAd;EAAA;EAAA,IAAM,GAAN;;EACA,IAAMC,SAAS,GAAGD,KAAK,CAALA,UAAAA,CAAlB,6CAAkBA,CAAlB;;EAEA,IAAIC,SAAS,KAAb,SAAA,EAA6B;IAC3B,MAAM,IAAA,KAAA,CAAN,wLAAM,CAAN;EAGD;;EAEDD,KAAK,CAALA,SAAAA,CAAgB,YAAM;IACpB,IAAM,QAAN,GAAA,SAAA,CAAM,QAAN;IAAA,IAAkBE,UAAlB,GAAA,SAAA,CAAkBA,UAAlB;IAEAC,QAAQ,CAARA,GAAQ,CAARA;IAEA,OAAO;MAAA,OAAMD,UAAU,CAAvB,GAAuB,CAAhB;IAAA,CAAP;EALFF,CAAAA,EAMG,CAAA,SAAA,EANHA,GAMG,CANHA;EAQA,OAAA,GAAA;AACD","sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\n\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => nanoid());\n  const container = React.useContext(SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\n      \"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\\n\\nThis can also happen if there are multiple copies of '@react-navigation' packages installed.\"\n    );\n  }\n\n  React.useEffect(() => {\n    const { register, unregister } = container;\n\n    register(key);\n\n    return () => unregister(key);\n  }, [container, key]);\n\n  return key;\n}\n"]},"metadata":{},"sourceType":"script"}