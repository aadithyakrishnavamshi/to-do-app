{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ResourceSavingScene;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _excluded = [\"visible\", \"children\", \"style\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar FAR_FAR_AWAY = 30000;\n\nfunction ResourceSavingScene(_ref) {\n  var visible = _ref.visible,\n      children = _ref.children,\n      style = _ref.style,\n      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n\n  if (_reactNative.Platform.OS === 'web') {\n    return React.createElement(_reactNative.View, _extends({\n      hidden: !visible,\n      style: [{\n        display: visible ? 'flex' : 'none'\n      }, styles.container, style],\n      pointerEvents: visible ? 'auto' : 'none'\n    }, rest), children);\n  }\n\n  return React.createElement(_reactNative.View, {\n    style: [styles.container, style],\n    pointerEvents: visible ? 'auto' : 'none'\n  }, React.createElement(_reactNative.View, {\n    collapsable: false,\n    removeClippedSubviews: _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'macos' ? !visible : true,\n    pointerEvents: visible ? 'auto' : 'none',\n    style: visible ? styles.attached : styles.detached\n  }, children));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  attached: {\n    flex: 1\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});","map":{"version":3,"sources":["ResourceSavingView.tsx"],"names":["FAR_FAR_AWAY","rest","Platform","display","visible","styles","detached","container","flex","overflow","attached","top"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAMA,YAAY,GAAlB,KAAA;;AAEe,SAAA,mBAAA,CAAA,IAAA,EAKL;EALkC,IAAA,OAAA,GAKlC,IALkC,CAAA,OAAA;EAAA,IAAA,QAAA,GAKlC,IALkC,CAAA,QAAA;EAAA,IAAA,KAAA,GAKlC,IALkC,CAAA,KAAA;EAAA,IAIvCC,IAJuC,0CAKlC,IALkC;;EAM1C,IAAIC,qBAAAA,CAAAA,EAAAA,KAAJ,KAAA,EAA2B;IACzB,OACE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,QAAA,CAAA;MAEE,MAAM,EAAE,CAFV,OAAA;MAGE,KAAK,EAAE,CACL;QAAEC,OAAO,EAAEC,OAAO,GAAA,MAAA,GAAY;MAA9B,CADK,EAELC,MAAM,CAFD,SAAA,EAHT,KAGS,CAHT;MAQE,aAAa,EAAED,OAAO,GAAA,MAAA,GAAY;IARpC,CAAA,EAAA,IAAA,CAAA,EADF,QACE,CADF;EAeD;;EAED,OACE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA;IACE,KAAK,EAAE,CAACC,MAAM,CAAP,SAAA,EADT,KACS,CADT;IAGE,aAAa,EAAED,OAAO,GAAA,MAAA,GAAY;EAHpC,CAAA,EAKE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA;IACE,WAAW,EADb,KAAA;IAEE,qBAAqB,EAGnBF,qBAAAA,CAAAA,EAAAA,KAAAA,KAAAA,IAAyBA,qBAAAA,CAAAA,EAAAA,KAAzBA,OAAAA,GAAmD,CAAnDA,OAAAA,GALJ,IAAA;IAOE,aAAa,EAAEE,OAAO,GAAA,MAAA,GAPxB,MAAA;IAQE,KAAK,EAAEA,OAAO,GAAGC,MAAM,CAAT,QAAA,GAAqBA,MAAM,CAACC;EAR5C,CAAA,EANJ,QAMI,CALF,CADF;AAoBD;;AAED,IAAMD,MAAM,GAAG,uBAAA,CAAA,MAAA,CAAkB;EAC/BE,SAAS,EAAE;IACTC,IAAI,EADK,CAAA;IAETC,QAAQ,EAAE;EAFD,CADoB;EAK/BC,QAAQ,EAAE;IACRF,IAAI,EAAE;EADE,CALqB;EAQ/BF,QAAQ,EAAE;IACRE,IAAI,EADI,CAAA;IAERG,GAAG,EAAEX;EAFG;AARqB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Platform, StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\ntype Props = {\n  visible: boolean;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst FAR_FAR_AWAY = 30000; // this should be big enough to move the whole view out of its container\n\nexport default function ResourceSavingScene({\n  visible,\n  children,\n  style,\n  ...rest\n}: Props) {\n  if (Platform.OS === 'web') {\n    return (\n      <View\n        // @ts-expect-error: hidden exists on web, but not in React Native\n        hidden={!visible}\n        style={[\n          { display: visible ? 'flex' : 'none' },\n          styles.container,\n          style,\n        ]}\n        pointerEvents={visible ? 'auto' : 'none'}\n        {...rest}\n      >\n        {children}\n      </View>\n    );\n  }\n\n  return (\n    <View\n      style={[styles.container, style]}\n      // box-none doesn't seem to work properly on Android\n      pointerEvents={visible ? 'auto' : 'none'}\n    >\n      <View\n        collapsable={false}\n        removeClippedSubviews={\n          // On iOS & macOS, set removeClippedSubviews to true only when not focused\n          // This is an workaround for a bug where the clipped view never re-appears\n          Platform.OS === 'ios' || Platform.OS === 'macos' ? !visible : true\n        }\n        pointerEvents={visible ? 'auto' : 'none'}\n        style={visible ? styles.attached : styles.detached}\n      >\n        {children}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  attached: {\n    flex: 1,\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}